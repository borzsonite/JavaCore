1. Создать поток можно 2мя способами
    - унаследоваться от класс Thread. При этом переопределяется run() в котором описывается то что выполняется в потоке. Поток запускается через вызов метода .start() выполняемого на объекте. myThread.run();
  -
2. Ключевое слово volatile используется в многопоточном приложении, когда к одной переменной возможен доступ из разных потоков, данное слово гарантирует, что разные потоки будут иметь дело с актуальным значением переменной и не возникнет ситуация при которой один поток будет иметь дело с закешированным значением переменной, а другой с актуальным значением. По сути использование этого слова запрещает кэширование переменной в кэше ядра. Тами образом обеспечивается синхронизация переменной для всех потоков.

3. Метод join() позволяет дождаться завершения выполнения одного потока до начала выполнения другого, например:
    thread1.start();
    thread1.join();
    thread2.start(); // начнет исполняться только после того как отработает thread1

4. Ключевое слово synchronized в сигнатуре метода означает что доступ к данному методу в один момент времени может иметь только один поток

5. У каждого объекта есть свой монитор, доступ к которому может иметь только один поток. 
