Перед ревью, проверьте себя по контрольным вопросам:
1) Какие примитивные типы есть в Java
2) Что такое явные и неявные приведения, с чем связано их наличие?
3) Какие данные мы рискуем потерять при явных приведениях?
4) StringBuilder.
5) Логические операторы.
6) char
7) Неизменяемые типы

Из коментов:
Вещественные числа:
Большие числа BigInteger и BigDecimal
Преобразование базовых типов данных:
Автоматическое привидение типов:
Примитивные типы:
Integer pool:
Явное привидение типов:
String pool:
String:
Логические операторы в Java:
Пример immutable класса:
StringBuffer и StringBuilder:
Многомерные массивы:
Побитовые операции:

1. Неизменяемые классы, существует 4 правила для создания immutable класса: 1. У него не должно быть сеттеров, 2. все поля должны быть private final, 3. Сам класс должен быть final, 4. Класс не должен возвращть изменяемые объекты (mutable objects).
2. Будучи созданым объект неизменяемого класса не может изменить свое состояние (т.е. походу все поля которые были инициализированы в момент создания  объекта, остаются неизменными все время пока объект существует)
3. StringBuilder и StringBuffer по сути аналогичные, но StringBuffer лучше использовать в многопоточных приложениях, там где доступ к объекту возможен одновременно из нескольких потоков. Для однопоточных приложений лучше использовать StringBuilder
4. StringBuilder/StringBuffer есть 4 конструктора:
    StringBuilder() // резервирует место в памяти для 16 символов
    StringBuilder(int capacity) // указывает количество символов для которого резервируется память.
    StringBuilder(String str) // принимает строку
    StringBuilder(CharSequence chars) //принимает набор символов
5. Методы StringBuilder/StringBuffer:
    .capacity() // получить количество символов для которого зарезервирована память.
    .ensureCapacity(32) // изменяет минимальную емкость буфера символов
    .charAt(0) // возвращает символ на нулевой позиции
    .setCharAt(4, 'c') // установлить символ по определенному индексу ('c' на поз.4)
    .getChars(start, end, dest, startPos) получает набор символов между определенными индексами и помещает их в целевой символьным массив с индекса startPos
    .append(subStr) //вставляет подстроку на определенную позицию
    .insert(0, "s") //добавляет строку или символ по определенному индексу в StringBuffer ("s" в начало)
    .delete(0,3) удаляет все символы с определенного индекса о определенной позиции
    .substring() обрезает строку с определенного индекса до конца, либо до определенного индекса
6. Stirng pool область в памяти, где хранится кэш строковых литералов. Если создается строка, которая уже записана в String pool ссылка на эту строку будет указывать не на новую область в памяти, а на строку ужу имеющуюся в String pool. Если строковый объект создается при помощи оператора new, такой объект в String pool не попадает. Поместить его туда можно при помощи оператора intern()

/////////////////////////ПОВТОР//////////////////////////
Теоретические вопросы для повторения:
1. Почему 0.1 + 0.7 != 0.8 ? //
    - потому что вещественные литералы не имеют точного двоичного представления
    - Непредставимые в двоичном машинном слове десятичные числа, после приведения их к десятичному виду, содержат как верные цифры так и «хвосты» из неверных цифр. Эти «хвосты» и являются источником ошибочных вычислений десятичных действительных ЧПТ с помощью двоичной арифметики. Покажем это на примерах.
2. Какая размерность у boolean?
    - если это единичная переменная 4 байта, если в массиве 1 байт, но вообще зависит от реализации JVM
3. Какая максимальная длина массива?
    - равно максимальному значению типа int = 2_147_483_647
4. чем отличается метод от функции?
    - Метод в объектно-ориентированном программировании — это функция или процедура, принадлежащая какому-то классу или объекту. Методы классифицируются по применимости к объектам: статические и простые или нестатические; по возможности использования:
    - Функция в программировании — фрагмент программного кода (подпрограмма), к которому можно обратиться из другого места программы. Функция может принимать параметры и должна возвращать некоторое значение, возможно void. Функции, которые возвращают void, называются процедурами


5. можно ли положить максимальное значение long во float
    - нельзя т.к. размерность 64бит, а float 32

