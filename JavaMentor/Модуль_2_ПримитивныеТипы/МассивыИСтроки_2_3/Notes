1. Объявление переменной (BigInteger bi;) и создание объекта (new BigInteger("12345") это два разных действия. При объявлении переменной просто резервируется  ячейка памяти под ссылку на объект. Объект создается оператором new, при этом помимо выделения места в памяти вызывается конструктор.

2. Конструктор это специальный метод инициализирующий поля объекта в соответствии с переданными параметрамии.

3. Во избежании ошибок в джава используется автоматическое управление памятью (в отличае от С). Выдлеление памяти производит программист, а очистка выполняется виртуальной машиной.

4. Объекты на которые отсутствуют ссылки автоматически удаляются сборщиком мусора. (т.е. переменные должны содержать ссылки на объект)

5. Утечки памяти связаны с ошибками программиста в результате которых программа продолжает сохранять ссылки на объекты, которые ей больше не нужны.

6. Объявление массива отличается от объявления переменной наличаем [], наппример: int[] array = new int [10], при этом объявление переменной и выделение памяти под массив посредством new это разные действия.

7. Размерность массива задаются в момент создания и в последствии не может менятся.

8. При создании массива он заполняется значениями по умолчанию, для символов и чисел это нули, для булевских значений - faulse, для ссылок - null.

9. Если переменная массива объявляется и инициализируется в одной строчке оператор new можно опустить: int[] arr = {1,2,3}; Можно также записать int[] arr = new int[]{1,2,3};

10. Для объявление массива в параметрах метода может использоваться ... , что означает передачу произвольного количества параметров, например:
   int MaxArr (int[] numbers) { // Здесь вызов будет выглядеть так: MaxArr(new int[]{1,2,3})
       some code
    }
   равно
   int MaxArr (int... numbers) { // Вызвать это метод можно MaxArr(1, 2, 3) компилятор сам упакует аргументы в массив и передаст в метод, внутри которого numbers ведет себя как обычный массив
       some code;
   }

11. Применительно к переменным ссылочного типа оператор == сравнивает, то ссылаются ли две ссылки на один и тот же объект

12. В отношении массивов оператор equals, также сравнивает ссылки и для сравнения содержимого не подходит.

13. Для сравнения содержимого массивов существует метод equals в классе Arrays, например:
        int[] arr = {1,2,3,3};
        int[] arr2 = new int[] {1,2,3};
        System.out.println(Arrays.equals(arr, arr2)); // true
    Данный метод подходит для сравнения одномерных массивов, но не подходит для одномерных

14. Для сравнения многомерных массивов используется метод того же класса deepEquals(a, b);

15. Класс Arrays содержит множестов полезных методов для работы с массивами, например: Arrays.toString(arr) - распечатать массив, Arrays.deepToString(arr) - распечатать многомерный массив, сортировка, двоичный поиск, копирование всего или части массива.

16. Строка это символьный тип хранящий последовательность символов произвольной длины. String str = "Hello"; Физически объект Stiring представляет собой ссылку на область в памяти, где размещены символы.

17. Объект строки является неизменяемым, будучи однажды созданным он остаются таким навсегда, можно только читать содержимое строки.

18. Любое изменение строки связано с созданием нового объекта, поэтому методы изменения строки .substring(), .replace(), toUpperCase() возвращают новую строку-результат.

19. При конкатенации строк также создается новая строка состоящая из исходных строк.

20. При работе со строками знак конкатенации (+) это более простая форма использования StringBuilder

21. StringBuilder это объект очень похожий на строку, но допускающий изменение содержимого, поэтому когда есть строка которую нужно постоянно изменять более удобно использовать StringBuilder

22. Для сравнения строк используется метод .equals(), например str1.equals(str2). Для сравнения строк без учета регистра используется метод .equalsIgnoreCase()

/////////////////////ДОПОЛНИТЕЛЬНО///////////
23. Объект создается в куче а ссылка на него хранится в стеке



/////////////////////ВОПРОСЫ//////////////
1.  В чем разница между созданием переменной ссылочного типа и созданием объекта? Что происходит при объявлении переменной ссылочного типа? 2. Что присходит при использовании оператора new?
2. Дать определение конструктора.
3. В чем отличие в управлении памятью между джава и Си? Кем выполняется выделение и очистка памяти в джава?
4. Что происходит с объектами на которые отсутствуют ссылки в программе?
5. С чем связаны утечки памяти в джава?
6. Чем отличается объявление массива от объявления переменной?
7. Когда задается размерность массива, может ли она впоследствии изменяться?
8. Какими значениями заполняется массив при создании. Какие  значения по умполчанию используются в символьных, числовых, булевских массивах;
9. В каких случаях можно опустить оператор new при объявлении массива?
10. Как передать в метод произвольное количество аргументов?
11. Что происходит при использовании оператора == применительно к переменным ссылочного типа? (ref1 == ref2)?
12. Что произойдет в случае использованрия оператора equals для сравнения содержимого двух массивов arr1.equals(arr2)?
13. Каким образом можно сравнить содержимов двух массиов?
14. Каким образом можно сравнить содержимое многомерных массивов?
15. Что содержит в себе класс Arrays?
16. Что представляет собой строка в джава?
17. Можно ли измять объект строки?
18. С чем связано изменение объекта строки, что возвращают методы .substring(), .replace(), toUpperCase()?
19. Что происходит при конкатеанции нескольких строк?
20. Какой объект испльзуется при конкатенации строк?
21. В чем отличае StringBuilder от строки, когда лучше его использовать?
22. Как сравнить содержимое двух строк (в т.ч. без учета регистра).


////////////////////ПОВТОРЫ//////////////////////
27.08.2020 +
28.08.2020 -
29.08.2020 +
31.08.2020+
04.09.2020+
11.09.2020
25.09.2020
25.10.2020

