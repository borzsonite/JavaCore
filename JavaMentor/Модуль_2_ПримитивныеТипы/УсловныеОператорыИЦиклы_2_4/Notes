1. Оператор switch () поддерживает ветвление по типам char, String, ENUM, целочисленные (кроме long)
2. В цикле с предусловием do while, после while() {}; обязательна точка с запятой.
3. В цикле for(1. иницализация переменной счетчика; 2. условие начала итерации; 3. выражение выполняемое после каждой итерации). Каждая из частей опциональна, обязательны только ;
4. Сокращеный цикл для обхода коллекций for(int elem: elems)
5. Оператор break прерывает цикл и передает управление на следующую за циклом строку (применим ко всем циклам)
6. continue досрочно заверщает текущую итерацию и начинает слудующую, при этом пред новой итерацией проверяется условие итерации.
7. Когда есть несколько вложенных циклов, то операторы break и  continue по умолчанию действуют на самый глубоко вложенный цикл. Это поведение можно изменить при помощи меток указав на какой цикл будет действовать оператор.
8. Метки существуют только для операторов break, continue
9. return используется для возврата значения из метода
10. return можно использовать в void методе, это означает немедленный выход из метода
11. В джава информация о вызовах метода хранится в стеке. При рекурсивном вызове метода стэк переполнятся и программа выбрасывает исключение StackOverflowError


//////////////////////ВОПРОСЫ////////////////////////
1? По каким типам поддерживает ветвление оператор switch?
2? Что является обязательным при использовании цикла do while?
3? Что указывается в скобках for(???) ?
4? Какова сигнатура цикла для обхода коллекций?
5? Что делает оператор break?
6? Что делате оператор continue?
7? При наличии вложенных циклов, на кокой цикл действуют операторы break, continue по-умолчанию?
8? Для каких операторов существуют метки
9? Для чего используется оператор return?
10? Что произойдет при использовании оператора return в void методе?
11. Где хранится информация о вызовах метода? Что произойдет при слишком большом количестве вызовов метода?



////////////////////ПОВТОРЫ//////////////////////
27.08.2020+
28.08.2020-
29.08.2020+
31.08.2020+
04.09.2020+
11.09.2020
25.09.2020
25.10.2020
