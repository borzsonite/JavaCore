1) Функциональные интерфейсы, основные типы.
- функциональный интерфейс, содержит один абстрактный метод, нужен чтобы иметь возможность писать в функциональном стиле.

2) Что такое лямбда выражение и ссылка на метод.
- лямбда выражение это блок кода который может быть передан в другое место кода. ЛВ реализует абстрактные методы ФИ. Сылка не метод сокращенная форма записи ЛВ. Если
3) Как они связаны с анонимным классом.

1) функциональное программирование- плюсы минусы, где применяется
-  функциональное программирование — это программирование, в котором функции являются объектами, и их можно присваивать переменным, передавать в качестве аргументов другим функциям, возвращать в качестве результата от функций и т. п.

2) анонимные классы, как создать, где применяются, особенно как создать экземпляр.
- Анонимный класс класс без имени, который одновременно и объявляется и инициализируется, служит для переопределния метода либо класса либо интерфейса.

1) Могут ли в ФИ содержаться методы класса Object?
- да, они там неявно содержаться и их можно вызывать.

3)Objects (зачем нужен)
4)Все способы реализации функицональных интерфейсов
5)К каким переменным есть доступ из лямбда-выражения
1. Что такое default методы в интерфейсе и для чего они были введены?
- дефолтные методы это методы имеющие реализацию. Введены чтобы избежать повторяющегося кода в различных классах. Если в разных классах методы интерфейса реализуются одинаково, то чтобы не переопределять каждый абстрактный метод, проще использовать дефолтный в котором такая реализация прописана.

2. как взаимосвязаны лямбда и функциональный интерфейс?
1. Любой анонимный класс можно заменить на лямбду?
1. Все способы реализации функционального интерфейса?
2. Все способы реализации фун.инт: 4 штуки: ссылка на метод, лямбда, через анонимный класс, через обычную имплементацию в классе.
1. Зачем нужны default методы в функциональном интерфейсе - тут про обратную совместимость.
3. к каким переменным можно обращаться внутри лямбды: переменные внутри метода (эффективно-финальные), static переменные класса, переменные интерфейса (с которым лямбда работает)
4. ссылка на метод - ну и в каком виде передается: имя класса:: имя стат метода (для статического метода); объект класса:: имя метода (для метода экземпляра); название класса:: new(для конструктора)
5. как получить стрим - через разные метод + бесконечные стримы ( через iterate и generate)

1. Где находятся функциональные интерфейсы?
- java.util.function





4) Что такое Стрим.
5) Какие бывают стримы (По разным критериям, например "конечные и бесконечные")
6) Терминальные и промежуточные методы.
7) Способы получения стрима.
4. Что такое ленивая инициализация стрима?
2. Расскажите про Comparator и Comparable?
5. Приведи пример терминальной и промежуточной операции над стримом?
6. В чем разница map и flatMap?
6. Какие бывают стримы: знать 3 группы: 1) конечные и бесконечные, 2) последовательные и параллельные 3) объектные и примитивные + спрашивает про параллельные, промежуточные и терминальные (конечные и бесконечные это)
7. Знать 5 примеров промежуточных операций (intermediate методы) и знать 5 примеров терминальных операций
8. Расспрашивает про терминальные и промежуточные: кто такие, сколько раз нужно вызывать, где вызывать терминальные нужны (начало-конец?)
9. что возвращают промежуточные операции: stream
11 для чего нужны методы forEach() и forEachOrdered()
12. В чем разница между интерфейсами Comparable и Comparator?
13. еще методы peek и forEach - в чем разница: первый промежуточный, второй - терминальный, ну и функционал какой у каждого
9. Зачем нужен класс Optional?
2. Что такое Stream?  Какие бывают стримы (По разным критериям, например "конечные и бесконечные")
Чем является Stream в контексте Java?
3. В каком пакете находится Stream?
4. Чем Stream отличается от итератора?
5. Сравнение стримов с коллекцией
6. Из каких частей состоит использование стримов?
7. В каком случае нужно закрывать стрим?
8. Первый этап работы со стримом
9. Откуда можно получить стрим?
10. Разница методов .list() и walk() Что такое саплер-поставщик?
11. Как получить стрим диапазона чисел?
12. В чем разница методов range и rangeClosed?
13. Можно ли конкатенировать стримы?
14. Расскажите про Comparator и Comparable?
15. В чем разница между foreach и foreachordered




